import type { HelixUser } from '@twurple/api';
import { DataObject } from '@twurple/common';
import { type EventSubAutoModLevel } from './common/EventSubAutoModLevel';
import { type EventSubAutoModSettingsUpdateEventData } from './EventSubAutoModSettingsUpdateEvent.external';
/**
 * An EventSub event representing the AutoMod settings being updated in a channel.
 */
export declare class EventSubAutoModSettingsUpdateEvent extends DataObject<EventSubAutoModSettingsUpdateEventData> {
    /**
     * The ID of the broadcaster in whose channel the AutoMod settings were updated.
     */
    get broadcasterId(): string;
    /**
     * The name of the broadcaster in whose channel the AutoMod settings were changed.
     */
    get broadcasterName(): string;
    /**
     * The display name of the broadcaster in whose channel the AutoMod settings were changed.
     */
    get broadcasterDisplayName(): string;
    /**
     * Gets more information about the broadcaster.
     */
    getBroadcaster(): Promise<HelixUser>;
    /**
     * The ID of the moderator who changed the AutoMod settings.
     */
    get moderatorId(): string;
    /**
     * The name of the moderator who changed the AutoMod settings.
     */
    get moderatorName(): string;
    /**
     * The display name of the moderator who changed the AutoMod settings.
     */
    get moderatorDisplayName(): string;
    /**
     * Gets more information about the moderator.
     */
    getModerator(): Promise<HelixUser>;
    /**
     * The default AutoMod level for the broadcaster.
     *
     * This field is `null` if the broadcaster has set one or more of the individual settings.
     */
    get overallLevel(): EventSubAutoModLevel | null;
    /**
     * The AutoMod level for hostility involving aggression.
     */
    get aggression(): EventSubAutoModLevel;
    /**
     * The AutoMod level for hostility involving name-calling, insults, or antagonization.
     */
    get bullying(): EventSubAutoModLevel;
    /**
     * The AutoMod level for discrimination against perceived or actual mental or physical abilities.
     */
    get disability(): EventSubAutoModLevel;
    /**
     * The AutoMod level for discrimination against women.
     */
    get misogyny(): EventSubAutoModLevel;
    /**
     * The AutoMod level for discrimination based on race, ethnicity, or religion.
     */
    get raceEthnicityOrReligion(): EventSubAutoModLevel;
    /**
     * The AutoMod level for sex-based terms, e.g. sexual acts or anatomy.
     */
    get sexBasedTerms(): EventSubAutoModLevel;
    /**
     * The AutoMod level for discrimination based on sexuality, sex, or gender.
     */
    get sexualitySexOrGender(): EventSubAutoModLevel;
    /**
     * The AutoMod level for profanity.
     */
    get swearing(): EventSubAutoModLevel;
}
//# sourceMappingURL=EventSubAutoModSettingsUpdateEvent.d.ts.map