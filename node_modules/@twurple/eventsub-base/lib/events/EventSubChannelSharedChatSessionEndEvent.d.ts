import { DataObject } from '@twurple/common';
import { type HelixUser } from '@twurple/api';
import { type EventSubChannelSharedChatSessionEndEventData } from './EventSubChannelSharedChatSessionEndEvent.external';
/**
 * An EventSub event representing the end of a shared chat session in a channel.
 */
export declare class EventSubChannelSharedChatSessionEndEvent extends DataObject<EventSubChannelSharedChatSessionEndEventData> {
    /**
     * The unique identifier for the shared chat session.
     */
    get sessionId(): string;
    /**
     * The ID of the broadcaster in the subscription condition which is now active in the shared chat session.
     */
    get broadcasterId(): string;
    /**
     * The name of the broadcaster in the subscription condition which is now active in the shared chat session.
     */
    get broadcasterName(): string;
    /**
     * The display name of the broadcaster in the subscription condition which is now active in the shared chat session.
     */
    get broadcasterDisplayName(): string;
    /**
     * Gets information about the broadcaster.
     */
    getBroadcaster(): Promise<HelixUser>;
    /**
     * The ID of the host broadcaster.
     */
    get hostBroadcasterId(): string;
    /**
     * The name of the host broadcaster.
     */
    get hostBroadcasterName(): string;
    /**
     * The display name of the host broadcaster.
     */
    get hostBroadcasterDisplayName(): string;
    /**
     * Gets information about the broadcaster.
     */
    getHostBroadcaster(): Promise<HelixUser>;
}
//# sourceMappingURL=EventSubChannelSharedChatSessionEndEvent.d.ts.map