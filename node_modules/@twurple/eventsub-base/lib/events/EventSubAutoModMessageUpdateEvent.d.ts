import type { HelixUser } from '@twurple/api';
import { DataObject } from '@twurple/common';
import { type EventSubAutoModLevel } from './common/EventSubAutoModLevel';
import { type EventSubAutoModMessagePart } from './common/EventSubAutoModMessage.external';
import { type EventSubAutoModMessageUpdateEventData } from './EventSubAutoModMessageUpdateEvent.external';
import { type EventSubAutoModResolutionStatus } from './common/EventSubAutoModResolutionStatus';
/**
 * An EventSub event representing a held chat message by AutoMod being resolved in a channel.
 */
export declare class EventSubAutoModMessageUpdateEvent extends DataObject<EventSubAutoModMessageUpdateEventData> {
    /**
     * The ID of the broadcaster in whose channel the held message was resolved.
     */
    get broadcasterId(): string;
    /**
     * The name of the broadcaster in whose channel the held message was resolved.
     */
    get broadcasterName(): string;
    /**
     * The display name of the broadcaster in channel the held message was resolved.
     */
    get broadcasterDisplayName(): string;
    /**
     * Gets more information about the broadcaster.
     */
    getBroadcaster(): Promise<HelixUser>;
    /**
     * The ID of the moderator who resolved the held message.
     */
    get moderatorId(): string;
    /**
     * The name of the moderator who resolved the held message.
     */
    get moderatorName(): string;
    /**
     * The display name of the moderator who resolved the held message.
     */
    get moderatorDisplayName(): string;
    /**
     * Gets more information about the moderator.
     */
    getModerator(): Promise<HelixUser>;
    /**
     * The ID of the user whose message was held by AutoMod.
     */
    get userId(): string;
    /**
     * The name of the user whose message was held by AutoMod.
     */
    get userName(): string;
    /**
     * The display name of the user whose message was held by AutoMod.
     */
    get userDisplayName(): string;
    /**
     * Gets more information about the user.
     */
    getUser(): Promise<HelixUser>;
    /**
     * The ID of the message held by AutoMod.
     */
    get messageId(): string;
    /**
     * The plain text of the message.
     */
    get messageText(): string;
    /**
     * The pre-parsed message parts.
     */
    get messageParts(): EventSubAutoModMessagePart[];
    /**
     * The category of the message.
     */
    get category(): string;
    /**
     * The level of severity.
     */
    get level(): EventSubAutoModLevel;
    /**
     * The status of the resolved message.
     */
    get status(): EventSubAutoModResolutionStatus;
    /**
     * The date of when AutoMod held the message.
     */
    get holdDate(): Date;
}
//# sourceMappingURL=EventSubAutoModMessageUpdateEvent.d.ts.map